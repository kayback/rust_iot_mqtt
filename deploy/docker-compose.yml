version: '3.8'

services:
  mosquitto:
    image: eclipse-mosquitto:2
    container_name: iot-mosquitto
    ports:
      - "1883:1883"
    volumes:
      - mosquitto-data:/mosquitto/data
      - mosquitto-logs:/mosquitto/log
    command: mosquitto -c /mosquitto-no-auth.conf
    healthcheck:
      test: ["CMD", "mosquitto_sub", "-t", "$$SYS/#", "-C", "1", "-i", "healthcheck", "-W", "3"]
      interval: 10s
      timeout: 5s
      retries: 5

  postgres:
    image: postgres:16
    container_name: iot-postgres
    environment:
      POSTGRES_USER: iot
      POSTGRES_PASSWORD: pass
      POSTGRES_DB: iotdb
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U iot -d iotdb"]
      interval: 10s
      timeout: 5s
      retries: 5

  ingestor:
    build:
      context: ..
      dockerfile: ingestor/Dockerfile
    container_name: iot-ingestor
    environment:
      MQTT_BROKER: mosquitto
      MQTT_PORT: 1883
      DATABASE_URL: postgres://iot:pass@postgres:5432/iotdb
      HTTP_ADDR: 0.0.0.0:8080
      BATCH_SIZE: 2000
      BATCH_TIMEOUT_MS: 50
      CHANNEL_CAPACITY: 50000
      RUST_LOG: info
    ports:
      - "8080:8080"
    depends_on:
      mosquitto:
        condition: service_healthy
      postgres:
        condition: service_healthy
    restart: unless-stopped

  simulator:
    build:
      context: ..
      dockerfile: simulator/Dockerfile
    container_name: iot-simulator
    environment:
      MQTT_BROKER: mosquitto
      MQTT_PORT: 1883
      RATE: 2000
      DEVICES: 1000
      RUST_LOG: info
    depends_on:
      mosquitto:
        condition: service_healthy
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    container_name: iot-prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: iot-grafana
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin
      GF_SECURITY_ADMIN_USER: admin
      GF_USERS_ALLOW_SIGN_UP: false
    ports:
      - "3000:3000"
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning:ro
      - grafana-data:/var/lib/grafana
    depends_on:
      - prometheus
    restart: unless-stopped

volumes:
  mosquitto-data:
  mosquitto-logs:
  postgres-data:
  prometheus-data:
  grafana-data:

